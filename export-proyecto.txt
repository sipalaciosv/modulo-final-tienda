
=======================
üìÑ C:\Users\thexz\OneDrive\Documentos\bootcamptalento\vue\modulo-final\.gitignore
=======================
# Logs
logs
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
pnpm-debug.log*
lerna-debug.log*

node_modules
.DS_Store
dist
dist-ssr
coverage
*.local

# Editor directories and files
.vscode/*
!.vscode/extensions.json
.idea
*.suo
*.ntvs*
*.njsproj
*.sln
*.sw?

*.tsbuildinfo

.eslintcache

# Cypress
/cypress/videos/
/cypress/screenshots/

# Vitest
__screenshots__/




=======================
üìÑ C:\Users\thexz\OneDrive\Documentos\bootcamptalento\vue\modulo-final\index.html
=======================
<!doctype html>
<html lang="es">
<head>
<meta charset="UTF-8" />
<meta name="viewport" content="width=device-width, initial-scale=1.0" />
<title>Tienda</title>
</head>
<body>
<div id="app"></div>
<script type="module" src="/src/main.js"></script>
</body>
</html>

=======================
üìÑ C:\Users\thexz\OneDrive\Documentos\bootcamptalento\vue\modulo-final\jsconfig.json
=======================
{
  "compilerOptions": {
    "paths": {
      "@/*": ["./src/*"]
    }
  },
  "exclude": ["node_modules", "dist"]
}




=======================
üìÑ C:\Users\thexz\OneDrive\Documentos\bootcamptalento\vue\modulo-final\package.json
=======================
{
  "name": "modulo-final",
  "version": "0.0.0",
  "private": true,
  "type": "module",
  "engines": {
    "node": "^20.19.0 || >=22.12.0"
  },
  "scripts": {
    "dev": "vite",
    "build": "vite build",
    "preview": "vite preview"
  },
  "dependencies": {
    "vue": "^3.5.22",
    "vue-router": "^4.6.3"
  },
  "devDependencies": {
    "@tailwindcss/postcss": "^4.1.16",
    "@vitejs/plugin-vue": "^6.0.1",
    "autoprefixer": "^10.4.21",
    "postcss": "^8.5.6",
    "tailwindcss": "^4.1.16",
    "vite": "^7.1.11",
    "vite-plugin-vue-devtools": "^8.0.3"
  }
}


=======================
üìÑ C:\Users\thexz\OneDrive\Documentos\bootcamptalento\vue\modulo-final\postcss.config.js
=======================
// postcss.config.js
export default {
  plugins: {
    '@tailwindcss/postcss': {},
  },
};


=======================
üìÑ C:\Users\thexz\OneDrive\Documentos\bootcamptalento\vue\modulo-final\public\favicon.ico
=======================

=======================
üìÑ C:\Users\thexz\OneDrive\Documentos\bootcamptalento\vue\modulo-final\README.md
=======================
# modulo-final

This template should help get you started developing with Vue 3 in Vite.

## Recommended IDE Setup

[VS Code](https://code.visualstudio.com/) + [Vue (Official)](https://marketplace.visualstudio.com/items?itemName=Vue.volar) (and disable Vetur).

## Recommended Browser Setup

- Chromium-based browsers (Chrome, Edge, Brave, etc.):
  - [Vue.js devtools](https://chromewebstore.google.com/detail/vuejs-devtools/nhdogjmejiglipccpnnnanhbledajbpd) 
  - [Turn on Custom Object Formatter in Chrome DevTools](http://bit.ly/object-formatters)
- Firefox:
  - [Vue.js devtools](https://addons.mozilla.org/en-US/firefox/addon/vue-js-devtools/)
  - [Turn on Custom Object Formatter in Firefox DevTools](https://fxdx.dev/firefox-devtools-custom-object-formatters/)

## Customize configuration

See [Vite Configuration Reference](https://vite.dev/config/).

## Project Setup

```sh
npm install
```

### Compile and Hot-Reload for Development

```sh
npm run dev
```

### Compile and Minify for Production

```sh
npm run build
```


=======================
üìÑ C:\Users\thexz\OneDrive\Documentos\bootcamptalento\vue\modulo-final\src\App.vue
=======================
<script setup>
import Navbar from '@/components/Navbar.vue';
</script>

<template>
  <div class="min-h-screen bg-gray-50 text-gray-900">
    <Navbar />
    <main class="container mx-auto py-6 px-4">
      <router-view />
    </main>
  </div>
</template>


=======================
üìÑ C:\Users\thexz\OneDrive\Documentos\bootcamptalento\vue\modulo-final\src\components\CartDetail.vue
=======================
<script setup>
import { computed } from 'vue';
import { cartStore } from '@/stores/simpleStore';

const props = defineProps({ open: Boolean });
const emit = defineEmits(['update:open']);

const items = computed(() => cartStore.state.items);
const total = computed(() => cartStore.total.value);

function close() { emit('update:open', false); }
function inc(it) { cartStore.setQty(it.id, it.qty + 1, it.stock); }
function dec(it) { cartStore.setQty(it.id, it.qty - 1, it.stock); }
function remove(id) { cartStore.remove(id); }
function clear() { cartStore.clear(); }
</script>

<template>
  <div
    v-if="open"
    class="fixed inset-0 z-40 grid place-items-center bg-black/40 p-4"
    @click.self="close"
  >
    <div class="w-full max-w-3xl overflow-hidden rounded-2xl bg-white shadow-xl">
      <header class="flex items-center justify-between border-b p-4">
        <h3 class="text-lg font-semibold">üõí Detalle del carrito</h3>
        <button class="inline-flex items-center gap-2 rounded-lg border border-gray-300 px-3 py-2 text-sm font-medium hover:bg-gray-100 transition" @click="close">‚úñ</button>
      </header>

      <div v-if="!items.length" class="p-6 text-gray-600">Tu carrito est√° vac√≠o.</div>

      <ul v-else class="max-h-[60vh] divide-y overflow-auto p-2">
        <li v-for="it in items" :key="it.id" class="grid grid-cols-1 gap-3 p-3 sm:grid-cols-12 sm:items-center">
          <span class="sm:col-span-5 font-medium">{{ it.name }}</span>
          <div class="sm:col-span-3 flex items-center gap-2">
            <button class="inline-flex items-center gap-2 rounded-lg border border-gray-300 px-3 py-2 text-sm font-medium hover:bg-gray-100 transition" @click="dec(it)" :disabled="it.qty <= 1">‚àí</button>
            <input
              type="number"
              v-model.number="it.qty"
              @change="cartStore.setQty(it.id, it.qty, it.stock)"
              min="1"
              :max="it.stock"
              class="w-20 rounded-lg border border-gray-300 px-3 py-2 text-sm outline-none focus:border-gray-900"
            />
            <button class="inline-flex items-center gap-2 rounded-lg border border-gray-300 px-3 py-2 text-sm font-medium hover:bg-gray-100 transition" @click="inc(it)" :disabled="it.qty >= it.stock">Ôºã</button>
          </div>
          <span class="sm:col-span-3 font-semibold">$ {{ (it.price * it.qty).toLocaleString() }}</span>
          <div class="sm:col-span-1">
            <button class="inline-flex items-center gap-2 rounded-lg border border-gray-300 px-3 py-2 text-sm font-medium hover:bg-gray-100 transition w-full sm:w-auto" @click="remove(it.id)">Eliminar</button>
          </div>
        </li>
      </ul>

      <footer v-if="items.length" class="flex items-center gap-3 border-t p-4">
        <strong class="text-lg">Total: $ {{ total.toLocaleString() }}</strong>
        <div class="ml-auto flex items-center gap-2">
          <button class="inline-flex items-center gap-2 rounded-lg border border-gray-200 bg-gray-100 px-3 py-2 text-sm font-medium hover:bg-gray-200 transition" @click="clear">Vaciar carrito</button>
          <button class="inline-flex items-center gap-2 rounded-lg border border-gray-900 bg-gray-900 px-3 py-2 text-sm font-medium text-white hover:bg-black transition" @click="close">Continuar</button>
        </div>
      </footer>
    </div>
  </div>
</template>


=======================
üìÑ C:\Users\thexz\OneDrive\Documentos\bootcamptalento\vue\modulo-final\src\components\Navbar.vue
=======================
<script setup>
import { ref, computed } from 'vue';
import { useRouter, RouterLink } from 'vue-router';
import CartDetail from './CartDetail.vue';
import { authStore, cartStore } from '@/stores/simpleStore';

const router = useRouter();
const isOpenCart = ref(false);
const isAuth = computed(() => authStore.isAuth.value);
const user = computed(() => authStore.state.user);
const cartCount = computed(() => cartStore.count.value);

function goLogin() { router.push({ name: 'login' }); }
function logout() { authStore.logout(); router.push({ name: 'home' }); }
</script>

<template>
  <header class="sticky top-0 z-30 border-b border-gray-200 bg-white/80 backdrop-blur">
    <nav class="container mx-auto flex items-center gap-3 py-3 px-4">
      <RouterLink to="/home" class="text-lg font-bold tracking-tight">üõçÔ∏è Tienda</RouterLink>

      <div class="ml-auto flex items-center gap-2">
        <button
          class="relative inline-flex items-center gap-2 rounded-lg border border-gray-300 px-3 py-2 text-sm font-medium hover:bg-gray-100 transition"
          @click="isOpenCart = true"
        >
          üõí Carrito
          <span
            v-if="cartCount"
            class="absolute -right-2 -top-2 inline-flex h-5 min-w-[20px] items-center justify-center rounded-full bg-gray-900 px-1 text-xs font-semibold text-white"
          >{{ cartCount }}</span>
        </button>

        <button
          v-if="!isAuth"
          class="inline-flex items-center gap-2 rounded-lg border border-gray-300 px-3 py-2 text-sm font-medium hover:bg-gray-100 transition"
          @click="goLogin"
        >
          Login
        </button>

        <div v-else class="flex items-center gap-3">
          <span class="hidden sm:inline text-sm text-gray-600">Hola, {{ user?.name }}</span>
          <button
            class="inline-flex items-center gap-2 rounded-lg border border-gray-300 px-3 py-2 text-sm font-medium hover:bg-gray-100 transition"
            @click="logout"
          >
            Cerrar sesi√≥n
          </button>
        </div>
      </div>
    </nav>
  </header>

  <CartDetail v-model:open="isOpenCart" />
</template>


=======================
üìÑ C:\Users\thexz\OneDrive\Documentos\bootcamptalento\vue\modulo-final\src\components\Products.vue
=======================
<script setup>
import { ref, onMounted, computed } from 'vue';
import { Products } from '@/services/products';
import { cartStore } from '@/stores/simpleStore';

const products = ref([]);
const loading = ref(true);
const q = ref('');
const qtyById = ref({});

onMounted(async () => {
  loading.value = true;
  products.value = await Products.all();
  qtyById.value = Object.fromEntries(products.value.map(p => [p.id, 1]));
  loading.value = false;
});

const filtered = computed(() => {
  const term = q.value.trim().toLowerCase();
  return products.value
    .filter(p => p.stock > 0)
    .filter(p => !term || p.name.toLowerCase().includes(term));
});

function addToCart(p) {
  const qty = Number(qtyById.value[p.id] || 1);
  cartStore.add(p, qty);
}
</script>

<template>
  <section class="space-y-4">
    <form class="flex gap-2" @submit.prevent>
      <input
        v-model="q"
        type="text"
        placeholder="Buscar producto por nombre..."
        class="w-full rounded-lg border border-gray-300 px-3 py-2 text-sm outline-none focus:border-gray-900"
      />
      <button
        type="submit"
        class="inline-flex items-center gap-2 rounded-lg border border-gray-300 px-3 py-2 text-sm font-medium hover:bg-gray-100 transition"
      >
        Buscar
      </button>
    </form>

    <div v-if="loading" class="text-gray-500">Cargando productos...</div>

    <div v-else class="grid [grid-template-columns:repeat(auto-fill,minmax(220px,1fr))] gap-4">
      <article v-for="p in filtered" :key="p.id" class="rounded-xl border border-gray-200 bg-white p-4 shadow-sm space-y-2">
        <img :src="p.image" :alt="p.name" class="h-32 w-full rounded-lg object-cover" />
        <h3 class="font-semibold">{{ p.name }}</h3>
        <p class="text-sm text-gray-600">Stock: {{ p.stock }}</p>
        <p class="text-lg font-bold">$ {{ p.price.toLocaleString() }}</p>
        <div class="flex items-center gap-2">
          <input
            type="number"
            min="1"
            :max="p.stock"
            v-model.number="qtyById[p.id]"
            class="w-24 rounded-lg border border-gray-300 px-3 py-2 text-sm outline-none focus:border-gray-900"
          />
          <button
            class="inline-flex items-center gap-2 rounded-lg border border-gray-900 bg-gray-900 px-3 py-2 text-sm font-medium text-white hover:bg-black transition"
            @click="addToCart(p)"
          >
            Agregar
          </button>
        </div>
      </article>

      <p v-if="!filtered.length" class="col-span-full text-center text-gray-500">
        No hay productos que coincidan con ‚Äú{{ q }}‚Äù
      </p>
    </div>
  </section>
</template>


=======================
üìÑ C:\Users\thexz\OneDrive\Documentos\bootcamptalento\vue\modulo-final\src\main.js
=======================
import './style.css';
import { createApp } from 'vue';
import App from './App.vue';
import router from './router';

createApp(App).use(router).mount('#app');


=======================
üìÑ C:\Users\thexz\OneDrive\Documentos\bootcamptalento\vue\modulo-final\src\router\index.js
=======================
// src/router/index.js
import { createRouter, createWebHistory } from 'vue-router';
import Home from '../views/Home.vue';
import Login from '../views/Login.vue';

const routes = [
  { path: '/', redirect: '/home' },
  { path: '/home', name: 'home', component: Home },
  { path: '/login', name: 'login', component: Login },
];

const router = createRouter({
  history: createWebHistory(),
  routes,
});

export default router;


=======================
üìÑ C:\Users\thexz\OneDrive\Documentos\bootcamptalento\vue\modulo-final\src\services\auth.js
=======================
// Simula Auth REST
// Auth.login(creds) => Promise<User> o lanza Error
// Credenciales v√°lidas: usuario1@mitienda.com / password


export const Auth = {
async login({ email, password }) {
await new Promise(r => setTimeout(r, 400));
if (email === 'usuario1@mitienda.com' && password === 'password') {
return { id: 100, name: 'Usuario Demo', email };
}
throw new Error('Credenciales inv√°lidas');
},
};

=======================
üìÑ C:\Users\thexz\OneDrive\Documentos\bootcamptalento\vue\modulo-final\src\services\products.js
=======================
// Simula una API REST que devuelve productos de forma as√≠ncrona
// Products.all() => Promise<Producto[]> con un peque√±o delay


const _data = [
{ id: 1, name: 'Teclado Mec√°nico', price: 39990, stock: 8, image: 'https://picsum.photos/seed/kb/200/120' },
{ id: 2, name: 'Mouse Gamer', price: 29990, stock: 0, image: 'https://picsum.photos/seed/mouse/200/120' },
{ id: 3, name: 'Monitor 24"', price: 129990, stock: 5, image: 'https://picsum.photos/seed/monitor/200/120' },
{ id: 4, name: 'Headset Pro', price: 49990, stock: 2, image: 'https://picsum.photos/seed/headset/200/120' },
];


export const Products = {
all() {
return new Promise((resolve) => {
setTimeout(() => resolve([..._data]), 600); // delay para simular red
});
},
};

=======================
üìÑ C:\Users\thexz\OneDrive\Documentos\bootcamptalento\vue\modulo-final\src\stores\simpleStore.js
=======================
import { reactive, computed } from 'vue';


// ‚Äî‚Äî‚Äî AUTH ‚Äî‚Äî‚Äî
const _userFromLS = (() => {
try { return JSON.parse(localStorage.getItem('user')) || null; } catch { return null; }
})();


const authState = reactive({ user: _userFromLS });


function setUser(u) {
authState.user = u;
if (u) localStorage.setItem('user', JSON.stringify(u));
else localStorage.removeItem('user');
}


export const authStore = {
state: authState,
isAuth: computed(() => !!authState.user),
login(user) { setUser(user); },
logout() { setUser(null); },
};


// ‚Äî‚Äî‚Äî CART ‚Äî‚Äî‚Äî
const cartState = reactive({ items: [] });


function findIndex(id) { return cartState.items.findIndex(i => i.id === id); }


export const cartStore = {
state: cartState,
add(product, qty = 1) {
const i = findIndex(product.id);
if (i === -1) cartState.items.push({ ...product, qty });
else cartState.items[i].qty = Math.min(cartState.items[i].qty + qty, product.stock);
},
remove(id) {
const i = findIndex(id);
if (i !== -1) cartState.items.splice(i, 1);
},
setQty(id, qty, stock) {
const i = findIndex(id);
if (i !== -1) cartState.items[i].qty = Math.max(1, Math.min(qty, stock ?? 9999));
},
clear() { cartState.items = []; },
count: computed(() => cartState.items.reduce((a, i) => a + i.qty, 0)),
total: computed(() => cartState.items.reduce((a, i) => a + i.price * i.qty, 0)),
};

=======================
üìÑ C:\Users\thexz\OneDrive\Documentos\bootcamptalento\vue\modulo-final\src\style.css
=======================
@tailwind base;
@tailwind components;
@tailwind utilities;


=======================
üìÑ C:\Users\thexz\OneDrive\Documentos\bootcamptalento\vue\modulo-final\src\views\Home.vue
=======================
<script setup>
import Products from '@/components/Products.vue';
</script>

<template>
  <div class="space-y-3">
    <h2 class="text-2xl font-semibold">Home</h2>
    <Products />
  </div>
</template>


=======================
üìÑ C:\Users\thexz\OneDrive\Documentos\bootcamptalento\vue\modulo-final\src\views\Login.vue
=======================
<script setup>
import { ref } from 'vue';
import { useRouter } from 'vue-router';
import { Auth } from '@/services/auth';
import { authStore } from '@/stores/simpleStore';

const email = ref('');
const password = ref('');
const error = ref('');
const loading = ref(false);
const router = useRouter();

async function submit() {
  error.value = '';
  loading.value = true;
  try {
    const user = await Auth.login({ email: email.value, password: password.value });
    authStore.login(user);
    router.push({ name: 'home' });
  } catch (e) {
    error.value = e?.message || 'Error al iniciar sesi√≥n';
  } finally {
    loading.value = false;
  }
}
</script>

<template>
  <div class="mx-auto max-w-md space-y-4">
    <h2 class="text-2xl font-semibold">Login</h2>
    <form class="space-y-3" @submit.prevent="submit">
      <label class="block space-y-1">
        <span class="text-sm text-gray-700">Correo</span>
        <input
          type="email"
          v-model.trim="email"
          placeholder="usuario1@mitienda.com"
          required
          class="w-full rounded-lg border border-gray-300 px-3 py-2 text-sm outline-none focus:border-gray-900"
        />
      </label>

      <label class="block space-y-1">
        <span class="text-sm text-gray-700">Contrase√±a</span>
        <input
          type="password"
          v-model="password"
          placeholder="password"
          required
          class="w-full rounded-lg border border-gray-300 px-3 py-2 text-sm outline-none focus:border-gray-900"
        />
      </label>

      <button
        class="w-full inline-flex items-center justify-center gap-2 rounded-lg border border-gray-900 bg-gray-900 px-3 py-2 text-sm font-medium text-white hover:bg-black transition"
        type="submit"
        :disabled="loading"
      >
        {{ loading ? 'Ingresando...' : 'Ingresar' }}
      </button>

      <p v-if="error" class="text-sm text-red-600">{{ error }}</p>
    </form>
  </div>
</template>


=======================
üìÑ C:\Users\thexz\OneDrive\Documentos\bootcamptalento\vue\modulo-final\tailwind.config.js
=======================
/** @type {import('tailwindcss').Config} */
export default {
  content: [
    './index.html',
    './src/**/*.{vue,js,ts,jsx,tsx}',
  ],
  theme: { extend: {} },
  plugins: [],
};


=======================
üìÑ C:\Users\thexz\OneDrive\Documentos\bootcamptalento\vue\modulo-final\vite.config.js
=======================
import { fileURLToPath, URL } from 'node:url'

import { defineConfig } from 'vite'
import vue from '@vitejs/plugin-vue'
import vueDevTools from 'vite-plugin-vue-devtools'

// https://vite.dev/config/
export default defineConfig({
  plugins: [
    vue(),
    vueDevTools(),
  ],
  resolve: {
    alias: {
      '@': fileURLToPath(new URL('./src', import.meta.url))
    },
  },
})
